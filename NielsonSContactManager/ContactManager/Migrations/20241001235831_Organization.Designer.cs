// <auto-generated />
using System;
using ContactManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContactManager.Migrations
{
    [DbContext(typeof(ContactContext))]
    [Migration("20241001235831_Organization")]
    partial class Organization
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ContactManager.Models.Category", b =>
                {
                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = "R",
                            Name = "Relatives"
                        },
                        new
                        {
                            CategoryId = "W",
                            Name = "Work"
                        },
                        new
                        {
                            CategoryId = "F",
                            Name = "Friends"
                        },
                        new
                        {
                            CategoryId = "O",
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("ContactManager.Models.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CategoryId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("First")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Organization")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = "W",
                            DateTime = new DateTime(2024, 10, 1, 17, 58, 31, 85, DateTimeKind.Local).AddTicks(8325),
                            Email = "smith@gmail.com",
                            First = "Smith",
                            Last = "Nielson",
                            Organization = "Utah Valley University",
                            Phone = "801-555-777"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = "F",
                            DateTime = new DateTime(2024, 10, 1, 17, 58, 31, 85, DateTimeKind.Local).AddTicks(8370),
                            Email = "sam@gmail.com",
                            First = "Sam",
                            Last = "Samuels",
                            Phone = "801-555-444"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = "R",
                            DateTime = new DateTime(2024, 10, 1, 17, 58, 31, 85, DateTimeKind.Local).AddTicks(8375),
                            Email = "rob@gmail.com",
                            First = "Rob",
                            Last = "Roberts",
                            Phone = "801-555-666"
                        });
                });

            modelBuilder.Entity("ContactManager.Models.Contacts", b =>
                {
                    b.HasOne("ContactManager.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
